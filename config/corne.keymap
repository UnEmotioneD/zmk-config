/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        my_email: my_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp L &kp A &kp C &kp K &kp E &kp A &kp G &kp L &kp E &kp N1 &kp N0 &kp AT &kp I &kp C &kp L &kp O &kp U &kp D &kp DOT &kp C &kp O &kp M>;
            label = "MY_EMAIL";
        };

        vim_search: vim_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp PRCNT &kp S &kp FSLH>;
            label = "VIM_SEARCH";
        };
    };

    combos {
        compatible = "zmk,combos";

        zx_undo_0 {
            bindings = <&kp LG(Z)>;
            key-positions = <25 26>;
            timeout-ms = <25>;
            slow-release;
            layers = <0>;
            require-prior-idle-ms = <100>;
        };

        xc_copy_0 {
            bindings = <&kp LG(C)>;
            key-positions = <26 27>;
            timeout-ms = <25>;
            slow-release;
            layers = <0>;
            require-prior-idle-ms = <100>;
        };

        cv_paste_0 {
            bindings = <&kp LG(V)>;
            key-positions = <27 28>;
            timeout-ms = <25>;
            slow-release;
            layers = <0>;
            require-prior-idle-ms = <100>;
        };

        less_then {
            bindings = <&kp LESS_THAN>;
            key-positions = <31 32>;
        };

        greater_then {
            bindings = <&kp GREATER_THAN>;
            key-positions = <32 33>;
        };

        zx_undo_4 {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
            timeout-ms = <25>;
            slow-release;
            layers = <4>;
        };

        xc_copy_4 {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
            timeout-ms = <25>;
            slow-release;
            layers = <4>;
        };

        cv_past_4 {
            bindings = <&kt LC(V)>;
            key-positions = <27 28>;
            timeout-ms = <25>;
            slow-release;
            layers = <4>;
        };

        xv_cut_0 {
            bindings = <&kp LG(X)>;
            key-positions = <26 28>;
            timeout-ms = <25>;
            require-prior-idle-ms = <100>;
            slow-release;
            layers = <0>;
        };

        jk_period_1 {
            bindings = <&kp PERIOD>;
            key-positions = <19 20>;
        };

        xv_cut_4 {
            bindings = <&kp LC(X)>;
            key-positions = <26 28>;
            timeout-ms = <25>;
            require-prior-idle-ms = <100>;
            slow-release;
            layers = <4>;
        };

        jk_period_5 {
            bindings = <&kp PERIOD>;
            key-positions = <19 20>;
            timeout-ms = <25>;
            require-prior-idle-ms = <100>;
            slow-release;
            layers = <5>;
        };

        er_intellij_stop_running_2 {
            bindings = <&kp LG(F2)>;
            key-positions = <3 4>;
            layers = <2>;
            timeout-ms = <25>;
            require-prior-idle-ms = <100>;
        };

        we_intellij_refactor_2 {
            bindings = <&kp LS(F6)>;
            key-positions = <2 3>;
            timeout-ms = <25>;
            require-prior-idle-ms = <100>;
            slow-release;
            layers = <2>;
        };

        df_vim_search_2 {
            bindings = <&vim_search>;
            key-positions = <15 16>;
            timeout-ms = <25>;
            require-prior-idle-ms = <100>;
            slow-release;
            layers = <2>;
        };
    };

    behaviors {
        new_mt: new_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        new_lt: new_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |     TAB    |  Q  |  W  |  E   |  R  |  T  |         |     Y     |  U  |  I  |  O  |  P  | BKSP |
            // | CTRL & ESC |  A  |  S  |  D   |  F  |  G  |         |     H     |  J  |  K  |  L  |  ;  |  '   |
            // |     ALT    |  Z  |  X  |  C   |  V  |  B  |         |     N     |  M  |  ,  |  .  |  /  | ENT  |
            //                          | GUI | SHFT | LWR |         | RIS & ENT | SPC | KOR |

            bindings = <
&kp TAB                      &kp Q  &kp W  &kp E      &kp R  &kp T                       &kp Y                    &kp U          &kp I      &kp O    &kp P          &kp BACKSPACE
&new_mt LEFT_CONTROL ESCAPE  &kp A  &kp S  &kp D      &kp F  &kp G                       &kp H                    &kp J          &kp K      &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_ALT                 &kp Z  &kp X  &kp C      &kp V  &kp B                       &kp N                    &kp M          &kp COMMA  &kp DOT  &kp FSLH       &kp ENTER
                                           &kp GLOBE  &mo 1  &new_mt LEFT_SHIFT ENTER    &new_mt RIGHT_GUI SPACE  &new_lt 2 F16  &none
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp EXCL        &kp AT            &kp HASH           &kp DOLLAR       &kp PERCENT    &kp CARET     &kp AMPS        &kp ASTRK  &kp LPAR  &kp RPAR   &trans
&trans  &kp N1          &kp N2            &kp N3             &kp N4           &kp N5         &kp NUMBER_6  &kp N7          &kp N8     &kp N9    &kp N0     &trans
&trans  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &none          &none         &kp UNDERSCORE  &kp MINUS  &kp PLUS  &kp EQUAL  &trans
                                          &trans             &none            &trans         &trans        &mo 3           &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &none                 &none             &kp TILDE             &kp PIPE               &none     &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp INSERT  &kp DELETE  &trans
&trans  &kp LC(LA(LEFT_GUI))  &kp LC(LEFT_ALT)  &kp GRAVE             &kp BACKSLASH          &none     &kp LEFT    &kp DOWN              &kp UP_ARROW          &kp RIGHT   &kp C_PLAY  &trans
&trans  &kp LS(LC(TAB))       &kp LC(TAB)       &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &none     &kp C_PREV  &kp C_VOLUME_DOWN     &kp C_VOL_UP          &kp C_NEXT  &kp C_MUTE  &trans
                                                &trans                &mo 3                  &trans    &trans      &trans                &trans
            >;
        };

        layer_3 {
            bindings = <
&none  &kp LA(LG(L))  &kp LG(NUMBER_1)  &kp LG(NUMBER_4)  &kp LG(NUMBER_6)   &kp LS(LC(R))      &bt BT_CLR            &kp LG(NUMBER_1)      &kp LG(NUMBER_2)      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&none  &kp LA(LG(Q))  &kp LG(F12)       &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LS(LG(F11))    &kp LC(F5)            &kp LC(GRAVE)         &kp LS(LG(M))         &kp LS(LG(E))  &kp LS(LG(P))  &to 4
&none  &kp LS(LG(F))  &kp LS(LG(O))     &kp LA(LG(R))     &kp LA(LG(S))      &none              &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(NUMBER_5))  &kp LS(LC(G))  &kp LS(LA(F))  &my_email
                                        &trans            &trans             &trans             &trans                &trans                &trans
            >;
        };

        layer_4 {
            bindings = <
&kp TAB                      &kp Q  &kp W  &kp E  &kp R  &kp T                       &kp Y                    &kp U            &kp I      &kp O    &kp P          &kp BSPC
&new_mt LEFT_CONTROL ESCAPE  &kp A  &kp S  &kp D  &kp F  &kp G                       &kp H                    &kp J            &kp K      &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LGUI                     &kp Z  &kp X  &kp C  &kp V  &kp B                       &kp N                    &kp M            &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                                           &none  &mo 5  &new_mt LEFT_SHIFT ENTER    &new_mt RIGHT_ALT SPACE  &new_lt 6 LANG1  &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN       &kp HASH           &kp DOLLAR       &kp PERCENT    &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3             &kp N4           &kp N5         &kp N6     &kp N7          &kp N8        &kp N9                &kp N0                 &none
&trans  &kp LEFT_BRACE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &none          &none      &kp UNDERSCORE  &kp MINUS     &kp PLUS              &kp EQUAL              &trans
                                           &trans             &trans           &trans         &trans     &mo 7           &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &none             &none         &kp TILDE           &kp PIPE             &none     &none           &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &kp INSERT  &kp DELETE  &trans
&trans  &kp LS(LEFT_GUI)  &kp LEFT_GUI  &kp GRAVE           &kp BACKSLASH        &none     &kp LEFT        &kp DOWN              &kp UP_ARROW          &kp RIGHT   &kp C_PLAY  &none
&trans  &kp LS(LC(TAB))   &kp LC(TAB)   &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &none     &kp C_PREVIOUS  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT  &kp C_MUTE  &trans
                                        &trans              &mo 7                &trans    &trans          &trans                &trans
            >;
        };

        layer_7 {
            bindings = <
&none  &kp LA(LC(L))  &kp LA(NUMBER_1)  &kp LA(NUMBER_4)  &kp LA(NUMBER_6)   &kp LS(F10)    &bt BT_CLR  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&to 0  &kp LS(LA(Q))  &kp LC(F12)       &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LA(F11)    &kp LC(F5)  &kp LC(GRAVE)     &kp LS(LC(M))     &kp LS(LC(E))  &kp LS(LC(P))  &none
&none  &kp LS(LC(F))  &kp LS(LC(O))     &kp LS(LA(R))     &kp LS(LA(S))      &none          &kp F2      &kp PRINTSCREEN   &kp LC(LG(V))     &kp LS(LC(G))  &none          &my_email
                                        &trans            &trans             &trans         &trans      &trans            &trans
            >;
        };
    };
};
