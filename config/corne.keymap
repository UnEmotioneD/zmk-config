/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        ctrl_opt: behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "CTRL+OPT";
            #binding-cells = <2>;
            bindings = <&kp LC(OPT)>, <&kp OPT>;
            tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |         |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL & ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |   '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |         |  N  |  M   |  ,  |  .  |  /  | RSE  |
            //                    | ALT | GUI | LWR |         | ENT | SPC  | KOR |

            bindings = <
&kp TAB                  &kp Q  &kp W  &kp E     &kp R     &kp T    &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S  &kp D     &kp F     &kp G    &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT                &kp Z  &kp X  &kp C     &kp V     &kp B    &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mo 2
                                       &kp LALT  &kp LGUI  &mo 1    &kp ENTER  &kp SPACE  &kp F13
            >;
        };

        layer_1 {
            bindings = <
&trans                &kp N6         &kp N7         &kp N8         &kp N9         &kp N0           &kp UNDERSCORE        &kp MINUS              &kp PLUS        &kp EQUAL        &kp BSLH   &kp PIPE
&kp LC(LA(LEFT_GUI))  &kp N1         &kp N2         &kp N3         &kp N4         &kp N5           &kp LEFT              &kp DOWN               &kp UP          &kp RIGHT        &kp TILDE  &kp GRAVE
&ctrl_opt             &kp LS(LA(L))  &kp LS(LG(P))  &kp LS(LG(E))  &kp LS(LG(E))  &kp LC(GRAVE)    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LBKT   &kp RBKT
                                                    &trans         &trans         &trans           &mo 3                 &trans                 &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp CARET        &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &bt BT_CLR            &bt BT_SEL 0          &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_BLE
&trans  &kp EXCLAMATION  &kp AT_SIGN      &kp HASH      &kp DOLLAR            &kp PERCENT              &trans                &trans                &trans        &C_BRI_DN     &C_BRI_UP     &trans
&trans  &trans           &kp LS(LC(TAB))  &kp LC(TAB)   &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)    &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &trans        &trans        &trans        &trans
                                          &trans        &trans                &trans                   &trans                &trans                &trans 
            >;
        };

        layer_3 {
            bindings = <
&trans   &trans   &trans     &trans     &trans    &trans      &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
&kp ESC  &kp TAB  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans   &trans   &trans     &trans     &trans    &trans      &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
                             &trans     &trans    &trans      &trans  &trans  &trans
            >;
        };
    };
};
