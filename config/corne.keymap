/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        my_email: my_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp L &kp A &kp C &kp K &kp E &kp A &kp G &kp L &kp E &kp N1 &kp N0 &kp AT &kp I &kp C &kp L &kp O &kp U &kp D &kp DOT &kp C &kp O &kp M>;
            label = "MY_EMAIL";
        };
    };

    combos {
        compatible = "zmk,combos";

        jk_escape_0 {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            timeout-ms = <25>;
            layers = <0>;
        };

        kl_enter_0 {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
            timeout-ms = <25>;
            layers = <0>;
        };

        zx_undo_0 {
            bindings = <&kp LG(Z)>;
            key-positions = <25 26>;
            timeout-ms = <25>;
            layers = <0>;
            slow-release;
        };

        xc_copy_0 {
            bindings = <&kp LG(C)>;
            key-positions = <26 27>;
            timeout-ms = <25>;
            layers = <0>;
            slow-release;
        };

        cv_paste_0 {
            bindings = <&kp LG(V)>;
            key-positions = <27 28>;
            timeout-ms = <25>;
            layers = <0>;
            slow-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |         |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL & ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENT  |
            // |  ALT |  Z  |  X  |  C  |  V  |  B  |         |  N  |  M   |  ,  |  .  |  /  |  '   |
            //                    | GUI | SHFT | LWR |        | RIS | SPC  | KOR |

            bindings = <
&kp TAB                  &kp Q               &kp W           &kp E           &kp R             &kp T    &kp Y  &kp U      &kp I              &kp O    &kp P     &kp BSPC
&mt LEFT_CONTROL ESCAPE  &mt LEFT_CONTROL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G    &kp H  &kp J      &kp K              &kp L    &kp SEMI  &kp ENTER
&kp LEFT_ALT             &kp Z               &kp X           &kp C           &kp V             &kp B    &kp N  &kp M      &kp COMMA          &kp DOT  &kp FSLH  &kp SQT
                                                             &kp LGUI        &kp RSHFT         &mo 1    &mo 2  &kp SPACE  &mt RIGHT_GUI F16
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp EXCL      &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR      &trans
&trans  &kp N1        &kp N2    &kp N3    &kp N4      &kp N5         &kp NUMBER_6    &kp N7     &kp N8     &kp N9     &kp N0        &trans
&trans  &kp CAPSLOCK  &kp LBKT  &kp LBRC  &kp RBRC    &kp RBKT       &kp UNDERSCORE  &kp MINUS  &kp PLUS   &kp EQUAL  &kp QUESTION  &kp DOUBLE_QUOTES
                                &trans    &trans      &trans         &mo 3           &trans     &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &none                 &none             &kp TILDE    &kp PIPE              &none                    &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp INSERT  &kp DELETE                            &trans
&trans  &kp LC(LA(LEFT_GUI))  &kp LC(LEFT_ALT)  &kp GRAVE    &kp BACKSLASH         &none                    &kp LEFT    &kp DOWN              &kp UP_ARROW          &kp RIGHT   &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &trans
&trans  &none                 &kp LS(LC(TAB))   &kp LC(TAB)  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)    &kp C_PREV  &kp C_VOLUME_DOWN     &kp C_VOL_UP          &kp C_NEXT  &kp C_PLAY                            &kp C_MUTE
                                                &trans       &trans                &mo 3                    &trans      &trans                &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp LS(LG(F))  &kp LS(LG(O))     &kp LEFT_COMMAND  &kp F7            &kp LG(F11)      &bt BT_CLR            &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2   &bt BT_SEL 3   &ext_power EP_TOG
&trans  &kp LS(F6)     &kp LG(NUMBER_1)  &kp LG(NUMBER_4)  &kp LA(F12)       &kp LS(LA(R))    &kp LC(F5)            &kp LC(GRAVE)         &kp LS(LG(M))         &kp LS(LG(E))  &kp LS(LG(P))  &my_email
&trans  &kp LA(LG(L))  &none             &to 4             &kp LG(NUMBER_6)  &none            &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(NUMBER_5))  &kp LS(LC(G))  &kp LS(LA(F))  &trans
                                         &trans            &trans            &trans           &trans                &trans                &trans
            >;
        };

        layer_4 {
            bindings = <
&kp TAB                  &kp Q               &kp W           &kp E           &kp R             &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_CONTROL ESCAPE  &mt LEFT_CONTROL A  &mt LEFT_GUI S  &mt LEFT_ALT D  &mt LEFT_SHIFT F  &kp G    &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LGUI                 &kp Z               &kp X           &kp C           &kp V             &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp APOS
                                                             &kp LALT        &kp LSHFT         &mo 5    &mo 6  &kp SPACE  &kp RALT
            >;
        };

        layer_5 {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN       &kp HASH        &kp DOLLAR       &kp PERCENT          &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3          &kp N4           &kp N5               &kp N6          &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &kp CAPSLOCK     &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RIGHT_BRACKET    &kp UNDERSCORE  &kp MINUS      &kp PLUS      &kp EQUAL             &kp QUESTION           &kp DOUBLE_QUOTES
                                           &trans          &trans           &trans               &mo 7           &trans         &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &none             &none            &kp TILDE    &kp PIPE       &none            &none           &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &kp INSERT  &kp DELETE  &trans
&trans  &kp LS(LEFT_GUI)  &kp LEFT_GUI     &kp GRAVE    &kp BACKSLASH  &none            &kp LEFT        &kp DOWN              &kp UP_ARROW          &kp RIGHT   &none       &trans
&trans  &none             &kp LS(LC(TAB))  &kp LC(TAB)  &kp LA(LEFT)   &kp LA(RIGHT)    &kp C_PREVIOUS  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT  &kp C_PLAY  &kp C_MUTE
                                           &trans       &trans         &mo 7            &trans          &trans                &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &kp LS(LC(F))  &kp LS(LC(O))     &kp LEFT_CONTROL  &kp F7            &kp LC(F11)    &none       &none            &none          &none          &none          &trans
&trans  &kp LS(F6)     &kp LA(NUMBER_1)  &kp LA(NUMBER_4)  &kp LA(F12)       &kp LS(F10)    &kp LC(F5)  &kp LC(GRAVE)    &kp LS(LC(M))  &kp LS(LC(E))  &kp LS(LC(P))  &my_email
&trans  &kp LA(LC(L))  &to 0             &none             &kp LA(NUMBER_6)  &none          &none       &kp PRINTSCREEN  &none          &kp LS(LC(G))  &none          &none
                                         &trans            &trans            &trans         &trans      &trans           &trans
            >;
        };
    };
};
